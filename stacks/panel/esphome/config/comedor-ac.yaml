esphome:
  name: "comedor-ac"
  friendly_name: "Climatizador del Comedor"

esp8266:
  board: esp01_1m

# Enable logging
logger:
  level: NONE

api:

ota:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "OrtizMa Living Room Climate"
    password: !secret mqtt_password

captive_portal:

mqtt:
  broker: !secret mqtt_broker
  username: "pablo"
  password: !secret mqtt_password
  id: mqtt_client
  
i2c:
  sda: GPIO4
  scl: GPIO5

remote_transmitter:
  pin: GPIO14
  carrier_duty_percent: 50%

climate:
  - platform: mitsubishi
    name: "AC Comedor"
    id: ac
    sensor: temperature
  
sensor:
  - platform: dht
    pin: GPIO12
    temperature:
      name: "Comedor Temperature"
      id: temperature
      filters:
        - calibrate_linear:
          - 30.3 -> 26.9
          - 30.6 -> 27.1
          - 31.7 -> 28.1
    humidity:
      name: "Comedor Humidity"
      id: humidity
      filters:
        - calibrate_linear:
          - 40.0 -> 46.0
          - 43.0 -> 49.0
          - 50.0 -> 58.0
          - 55.0 -> 65.0
          - 54.0 -> 62.0
    update_interval: 15s
    
  - platform: wifi_signal
    name: "WiFi Signal Sensor"
    id: wifi_db
    update_interval: 10s

image:
  - file: "images/x.png"
    id: x_image
    resize: 20x20
    type: TRANSPARENT_IMAGE
  - file: "images/fire.png"
    id: fire_image
    resize: 40x40
    type: TRANSPARENT_IMAGE
  - file: "images/snowflake.png"
    id: snowflake_image
    resize: 35x35
    type: TRANSPARENT_IMAGE
    
font:
  # gfonts://family[@weight]
  - file: "gfonts://Roboto"
    id: roboto
    size: 16
  - file: "gfonts://Roboto"
    id: roboto_big
    size: 40

display:
-   platform: ssd1306_i2c
    model: "SSD1306 128x64"
    address: 0x3C
    lambda: |-
      if(id(wifi_db).has_state()){ // WIFI OK
        if (!id(mqtt_client)->is_connected()) { // MQTT KO
          it.printf(110, 0, id(roboto), TextAlign::TOP_LEFT , "!");
        }else{ // WIFI & MQTT OK
          it.filled_rectangle(99, 6, 5, 10); // 1 Bar

          if(id(wifi_db).has_state() && id(wifi_db).state > -70){ // 2 Bars
            it.filled_rectangle(106, 4, 5, 12);
          }else{
            it.rectangle(106, 4, 5, 12);
          }

          if(id(wifi_db).has_state() && id(wifi_db).state > -60){ // 3 Bars
            it.filled_rectangle(113, 2, 5, 14);
          }else{
            it.rectangle(113, 2, 5, 14);
          }

          if(id(wifi_db).has_state() && id(wifi_db).state > -40){ // 4 Bars
            it.filled_rectangle(120, 0, 7, 16);
          }else{
            it.rectangle(120, 0, 5, 16);
          }
        }
      }else{ // WIFI KO
        it.image(100, 0, id(x_image));
      }
      
      if (id(temperature).has_state()) { // Temperature
        it.printf(0, 0, id(roboto), TextAlign::TOP_LEFT , "%.1f°", id(temperature).state);
      }else{
        it.printf(0, 0, id(roboto), TextAlign::TOP_LEFT , "--.-°");
      }

      it.printf(38, 0, id(roboto), TextAlign::TOP_LEFT , "/");

      if (id(humidity).has_state()) { // Humidity
        it.printf(50, 0, id(roboto), TextAlign::TOP_LEFT , "%.1f%%", id(humidity).state);
      }else{
        it.printf(50, 0, id(roboto), TextAlign::TOP_LEFT , "--.-%%");
      }

      if(id(ac).mode != 0){
        it.printf(0, 20, id(roboto_big), TextAlign::TOP_LEFT , "%.1f°", id(ac).target_temperature);
        if(id(ac).mode == 2){
        it.image(90, 25, id(snowflake_image));
        }else if(id(ac).mode == 3){
          it.image(90, 20, id(fire_image));
        }
      }else{
        it.printf(0, 20, id(roboto_big), TextAlign::TOP_LEFT , "OFF");
      }